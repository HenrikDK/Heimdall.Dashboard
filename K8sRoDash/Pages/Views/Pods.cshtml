<template id="pods">
    <div class="pl-2 pr-4 w-100">
        <div class="flex my-2 items-center">
            <span class="text-slate-500 text-2xl font-light sans">Pods</span>
        </div>
        
        <div class="flex justify-around mb-4 mt-1">
            <div class="graph">
                <v-chart :option="podsAvailable"></v-chart>
            </div>
            <div class="graph">
                <v-chart :option="podCpuUsage"></v-chart>
            </div>
            <div class="graph">
                <v-chart :option="podMemoryUsage"></v-chart>
            </div>
        </div>
        
        <div id="pods-table" ref="events" v-show="podData.length > 0" class="vh-80 w-full"></div>
    </div>
</template>

<script>
    components["pods"] = {
        template: "#pods",
        data() {
            return {
                pods: {},
                podData: [
                    {type: "info", name: "flux-something",  age: "22d4h", namespace: "petstore", restarts: "2", containers: "1,1"},
                    {type: "error", name: "flux-something", age: "10d5h", namespace: "petstore", restarts: "0", containers: "1"},
                    {type: "info", name: "kube-controller", age: "13d5h", namespace: "petstore", restarts: "3", containers: "1"},
                    {type: "warning", name: "cert-manager", age: "14min", namespace: "petstore", restarts: "0", containers: "0"},
                    {type: "error", name: "pod-manager", age: "1h20m", namespace: "petstore", restarts: "0", containers: "1,2"},
                ],
            }
        },
        props: ['namespace', 'search'],        
        computed: {
            podsAvailable: () => podReady(),
            podCpuUsage: () => podCpu(),
            podMemoryUsage: () => podMemory(),
        },
        mounted() {
              this.events = new Tabulator(this.$refs.events, {
                height:"80vh",
                layout:"fitData",
                persistence:true,
                persistenceMode:true,
                data: this.podData,
                reactiveData:true,
                columns: [
                    {title:"Type", field:"type", sorter:"string", minWidth:150},
                    {title:"Name", field:"name", sorter:"string", minWidth:280},
                    {title:"Namespace", field:"namespace", sorter:"string", minWidth:200},
                    {title:"Containers", field:"containers", sorter:"string", minWidth:250},
                    {title:"Age", field:"age", sorter:"string", minWidth:200},
                    {title:"Restarts", field:"restarts", sorter:"string", minWidth:150},
                ],
              });
        },
    };
    
    routes.push({path:'/pods', component: components["pods"]})    
</script>

<style>
</style>