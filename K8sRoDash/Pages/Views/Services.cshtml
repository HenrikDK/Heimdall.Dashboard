<template id="services">
    <div class="pl-2 pr-4 w-100">
        <div class="flex my-2 items-center">
            <span class="text-slate-500 text-2xl font-light sans">Services</span>
        </div>
        
        <div id="services-table" ref="services" v-show="serviceData.length > 0" class="vh-80 w-full"></div>
    </div>
</template>

<script type="module">
    import { TabulatorFull as Tabulator } from 'tabulator'

    components["services"] = {
        template: "#services",
        data() {
            return {
                services: {},
                serviceData: [
                    {type: "ClusterIP", name: "user-api", namespace:"petstore", kubeDNS:"petstore.user-api:8080", age: "22d4h"},
                    {type: "NodeIP", name: "store-api", namespace:"petstore", kubeDNS:"petstore.store-api:8080", age: "10d5h"},
                    {type: "LoadBalancer", name: "order-api", namespace:"petstore", kubeDNS:"petstore.order-api:8080", age: "13d5h"},
                    {type: "ClusterIP", name: "management-ui", namespace:"petstore", kubeDNS:"petstore.management-ui:8080", age: "14min"},
                    {type: "NodeIP", name: "pet-api", namespace:"petstore", kubeDNS:"petstore.pet-api:8080", age: "1h20m"},
                ],
            }
        },
        props: ['namespace', 'search'],        
        mounted() {
          this.events = new Tabulator(this.$refs.services, {
            maxHeight:"80vh",
            layout:"fitData",
            movableColumns: true,
            persistence:true,
            persistenceMode:true,
            data: this.serviceData,
            reactiveData:true,
            columns: [
                {title:"Type", field:"type", sorter:"string", minWidth:250},
                {title:"Name", field:"name", sorter:"string", minWidth:250},
                {title:"Namespace", field:"namespace", sorter:"string", minWidth:200},
                {title:"KubeDNS", field:"kubeDNS", sorter:"string", minWidth:400},
                {title:"Age", field:"age", sorter:"string", minWidth:200},
            ],
          });
        },
    };
    
    routes.push({path:'/services', component: components["services"]})    
</script>

<style>
</style>