<template id="scale-pods">
  <div @@click="openModal" class="flex px-2 ms-4 rounded-lg items-center justify-center border cursor-pointer
      border-gray-300 bg-white fill-gray-300
      hover:border-sky-500 hover:bg-sky-100 hover:fill-sky-500
      dark:border-white/[.4] dark:text-white/[.6] 
      dark:hover:border-blue-400 dark:hover:text-blue-400 dark:hover:fill-blue-400
      dark:bg-zinc-900">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 me-2">
      <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-9.75 0h9.75" />
    </svg>
    Scale
  </div>
  <modal :open="isOpen" classes="w-1/3 p-8" @@close="isOpen = false" name="Scale workload">
    <template #content>
      <div class="flex text-xl justify-center pb-8">
        <div>Scale {{item.kind}}</div>
        <div class="ps-2 font-bold">{{item.metadata.name}}</div>
      </div>
      <div class="flex font-bold">
        <div class="w-1/3">Current replicas:</div>
        <div class="w-2/3 px-1">{{item.status?.readyReplicas}}</div>
      </div>
      <div class="flex">
        <div class="w-1/3">Desired replicas:</div>
        <div class="w-2/3"><input :value="desired" @@input="updateValue($event.target.value)" max="10" class="w-12 px-1 rounded border" type="number"/></div>
      </div>
      <div class="flex pt-8">
        <div class="w-2/3"></div>
        <div class="w-1/3 flex">
          <div @@click="closeModal" 
               class="flex px-2 py-2 rounded-lg items-center me-4 justify-center border cursor-pointer
                border-gray-300 bg-white fill-gray-300
                hover:border-gray-500 hover:bg-gray-100 hover:fill-gray-500
                dark:border-white/[.4] dark:text-white/[.6] 
                dark:hover:border-white dark:hover:text-white dark:hover:fill-white
                dark:bg-zinc-900">
            Close
          </div>
          <div @@click="submitHandler"
               class="flex px-2 py-2 rounded-lg items-center me-4 justify-center border cursor-pointer
                border-gray-300 bg-white fill-gray-300
                hover:border-sky-500 hover:bg-sky-100 hover:fill-sky-500
                dark:border-white/[.4] dark:text-white/[.6] 
                dark:hover:border-blue-400 dark:hover:text-blue-400 dark:hover:fill-blue-400
                dark:bg-zinc-900">
            Scale
          </div>
        </div>
      </div>
    </template>
  </modal>
</template>

<script type="module">
import { ref } from 'vue'

let setup = (props, ctx) => {
  let isOpen = ref(false);
  let desired = ref(0);
  
  let updateValue = (v) => {
    desired.value = v;
  }
  
  let closeModal = () => {
    isOpen.value = false;
  }
  
  let openModal = () => {
    desired.value = props.item.status?.readyReplicas ?? 1;
    isOpen.value = true;
  }
  
  let submitHandler = () => {
    isOpen.value = false;
    //here you do whatever
  }
  
  return {isOpen, desired, updateValue, closeModal, openModal, submitHandler}
}
components["scale-pods"] = { template: "#scale-pods", props:['item'], setup };
</script>
