<template id="nav-bar">
    <header class="px-2 text-base z-10 h-14 sticky top-0 bg-k8s">
        <nav>
            <div class="flex justify-between">
                <div>
                    <router-link class="text-white cursor-pointer" to="/">
                        <div class="flex pt-1">
                            <div>
                                <img src="art/viking-ship.svg" width="65" alt="Heimdall"/>
                            </div>
                            <div class="px-3">
                                <span class="text-5xl text-white">Heimdall</span>
                            </div>
                        </div>
                    </router-link>
                </div>
                <div class="flex justify-end items-center">
                    <template v-if="$route.path != '/'">
                        <div class="mr-3 w-60">
                            <v-multi v-model="selected" mode="multiple" :classes="styles" :close-on-select="false" :hide-selected="false" placeholder="All namespaces" :options="namespaces" @@update:model-value="$emit('select-ns', $event.value)"></v-multi>
                        </div>
                        <div class="mr-3">
                            <v-search v-model="search" @@update:model-value="$emit('search', $event);"></v-search>
                        </div>
                    </template>
                </div>
            </div>
        </nav>
    </header>
</template>

<script>
    components["nav-bar"] = {
      template: "#nav-bar",
      emits: ['search','select-ns'],
      data() {
        return {
            selected: [],
            filters: [],
            cluster: [],
            namespaces: [],
            search: '',
            styles:{
             container: 'relative mx-auto w-full text-gray-200 flex items-center justify-end box-border cursor-pointer border border-white/[.4] outline-0 rounded bg-k8s text-base leading-snug outline-none',
             containerOpen: 'rounded-b-none',
             containerOpenTop: 'rounded-t-none',
             containerActive: 'focus:border-white',
             multipleLabel: 'flex items-center h-8 absolute left-0 top-0 pointer-events-none bg-transparent leading-snug pl-3.5 rtl:left-auto rtl:right-0 rtl:pl-0 rtl:pr-3.5',
             search: 'w-full absolute inset-0 outline-none focus:ring-0 appearance-none box-border border-0 text-base font-sans bg-k8s rounded pl-3.5 rtl:pl-0 rtl:pr-3.5',
             tags: 'flex-grow flex-shrink flex flex-wrap items-center mt-1 pl-2 rtl:pl-0 rtl:pr-2',
             tag: 'bg-green-500 text-white text-sm font-semibold py-0.5 pl-2 rounded mr-1 mb-1 flex items-center whitespace-nowrap rtl:pl-0 rtl:pr-2 rtl:mr-0 rtl:ml-1',
             tagDisabled: 'pr-2 opacity-50 rtl:pl-2',
             tagRemove: 'flex items-center justify-center p-1 mx-0.5 rounded-sm hover:bg-black hover:bg-opacity-10 group',
             tagRemoveIcon: 'bg-multiselect-remove bg-center bg-no-repeat opacity-30 inline-block w-3 h-3 group-hover:opacity-60',
             tagsSearchWrapper: 'inline-block relative mx-1 mb-1 flex-grow flex-shrink h-8',
             tagsSearch: 'absolute inset-0 border-0 outline-none focus:ring-0 appearance-none p-0 text-base font-sans box-border w-full',
             tagsSearchCopy: 'invisible whitespace-pre-wrap inline-block h-px',
             placeholder: 'flex items-center h-8 absolute left-0 top-0 pointer-events-none bg-transparent leading-snug pl-3.5 text-gray-200 rtl:left-auto rtl:right-0 rtl:pl-0 rtl:pr-3.5',
             caret: 'bg-multiselect-caret bg-center bg-no-repeat w-2.5 h-4 py-px box-content mr-3.5 relative z-10 opacity-40 flex-shrink-0 flex-grow-0 transition-transform transform pointer-events-none rtl:mr-0 rtl:ml-3.5',
             caretOpen: 'rotate-180 pointer-events-auto',
             clear: 'pr-3.5 relative z-10 opacity-40 text-white transition duration-300 flex-shrink-0 flex-grow-0 flex hover:opacity-80 rtl:pr-0 rtl:pl-3.5',
             clearIcon: 'bg-multiselect-remove bg-center bg-no-repeat w-2.5 h-4 py-px box-content inline-block',
             spinner: 'bg-multiselect-spinner bg-center bg-no-repeat w-4 h-4 z-10 mr-3.5 animate-spin flex-shrink-0 flex-grow-0 rtl:mr-0 rtl:ml-3.5',
             inifite: 'flex items-center justify-center w-full',
             inifiteSpinner: 'bg-multiselect-spinner bg-center bg-no-repeat w-4 h-4 z-10 animate-spin flex-shrink-0 flex-grow-0 m-3.5',
             dropdown: 'max-h-60 absolute -left-px -right-px bottom-0 transform translate-y-full border border-gray-300 -mt-px overflow-y-scroll z-50 bg-k8s flex flex-col rounded-b',
             dropdownTop: '-translate-y-full top-px bottom-auto rounded-b-none rounded-t',
             dropdownHidden: 'hidden',
             options: 'flex flex-col p-0 m-0 list-none text-white/[.7]',
             optionsTop: '',
             group: 'p-0 m-0',
             option: 'flex items-center justify-start box-border text-left cursor-pointer text-base leading-snug py-2 px-2',
             optionPointed: 'text-white bg-white/[.05]',
             optionSelected: 'text-white bg-white/[.1]',
             optionDisabled: 'text-gray-200 cursor-not-allowed',
             optionSelectedPointed: 'text-gray-200 bg-k8s',
             optionSelectedDisabled: 'text-green-100 bg-green-500 bg-opacity-50 cursor-not-allowed',
             noOptions: 'py-2 px-2 text-gray-200 bg-k8s text-left',
             noResults: 'py-2 px-2 text-gray-200 bg-k8s text-left',
             fakeInput: 'bg-transparent absolute left-0 right-0 -bottom-px w-full h-px border-0 p-0 appearance-none outline-none text-transparent',
             spacer: 'h-8 py-px box-content',
           }
        }
      },
      methods: {
          async updateList() {
              if (!this.cluster && this.cluster.length > 0) return;
              
              var ns = []

              var ns = this.cluster;
              
              if (this.filters && this.filters.length > 0){
                  ns = this.cluster.filter(x => nsEndsWith(x, this.filters));
              }
              
              ns = ns.map(x => { return { label: x.metadata.name, value: x.metadata.name}})
                            
              this.namespaces = ns;
          }
      },
      watch: {
        filters: function (){this.updateList()},
        cluster: function (){this.updateList()},
      },
      async mounted() {
        fetch("/?handler=filters")
         .then(d => d.json())
         .then(j => this.filters = j);
        
        var host = window.location.origin;
        streamResults(host + '/k8s/api/v1/namespaces', j => this.cluster = j)

        this.selected = this.namespaces[0];
      },
      computed: {},
    };
</script>

<style>
.header-select {
    width: 230px;
    height: 34px;
    font-size: 1rem;
    --vs-controls-color: rgba(255, 255, 255, 0.4);
    --vs-border-color: rgba(255, 255, 255, 0.4);

    --vs-dropdown-bg: #326ce5;
    --vs-dropdown-color: rgba(255, 255, 255, 0.4);

    --vs-selected-bg: #326ce5;
    --vs-selected-color: #ffffff;
    --vs-selected-border-color: #ffffff;
    
    --vs-search-input-color: #ffffff;
    --vs-search-input-bg: rgba(255, 255, 255, 0.4);
    --vs-search-input-placeholder-color: #ffffff;

    /* Active State */
    --vs-dropdown-option--active-bg: #1d5ce1;
    --vs-dropdown-option--active-color: #ffffff;
}

.vs--open,
.vs--open ul,
.vs--open div
{
    border-color: #ffffff !important;
}
</style>