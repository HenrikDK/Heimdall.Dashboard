<template id="scaler">
  <div @@click="isOpen = true" class="flex px-2 ms-4 rounded-lg items-center justify-center border cursor-pointer
      border-gray-300 bg-white fill-gray-300
      hover:border-sky-500 hover:bg-sky-100 hover:fill-sky-500
      dark:border-white/[.4] dark:text-white/[.6] 
      dark:hover:border-white dark:hover:text-white dark:hover:fill-white
      dark:bg-zinc-900">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 me-2">
      <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-9.75 0h9.75" />
    </svg>
    Scale
  </div>
  <modal :open="isOpen" @@modal-close="isOpen = false" @@submit="submitHandler" name="Scale workload">
    <template #header><div class="">Scale replica set<div></template>
    <template #content>Custom content</template>
    <template #footer>Custom content</template>
  </modal>
</template>

<script type="module">
import { ref } from 'vue'

let setup = (props, ctx) => {
  const isOpen = ref(false);
  
  const submitHandler = ()=> {
    //here you do whatever
  }
  
  return {isOpen, submitHandler}
}
components["scaler"] = { template: "#scaler", props:['item'], setup };
</script>
