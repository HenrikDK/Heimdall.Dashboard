<template id="log-viewer">
  <div ref="parentRef"
    class="pl-2 border border-gray-300 rounded-md h-[85vh] overflow-auto
          cursor-text font-mono text-xs
          dark:border-zinc dark:bg-black dark:border-white/[.4] dark:text-white/[.9]">
    <div>

      <div v-if="events.length == 0" 
            class="justify-center w-full flex py-2">
        <spinner></spinner>
      </div>

      <div v-else>
        <pre v-for="e in events">{{ e }}</pre>
      </div>

    </div>

  </div>
</template>

<script type="module">
import { ref, watch, computed, onMounted } from 'vue'
import { useVirtualizer } from '@@tanstack/vue-virtual'

let setup = (props, ctx) => {
  const parentRef = ref(null)

  const rowVirtualizer = useVirtualizer({
    count: events.length,
    getScrollElement: () => parentRef.value,
    estimateSize: () => 16,
  })

  const virtualRows = computed(() => rowVirtualizer.value.getVirtualItems())
  const totalSize = computed(() => rowVirtualizer.value.getTotalSize())

  const measureElement = (el) => {
    if (!el) {
      return
    }

    rowVirtualizer.value.measureElement(el)

    return undefined
  }

  return {rowVirtualizer, measureElement}
}

components["log-viewer"] = { template: "#log-viewer", emits: [], setup, 
  props: {
    events: Array
  }
};
</script>
